# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-12-17 22:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=250)),
                ('city', models.CharField(max_length=250)),
                ('state', models.CharField(max_length=250)),
                ('zip_code', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('backup_start_date', models.DateTimeField()),
                ('backup_end_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('cost', models.IntegerField()),
                ('deposit', models.IntegerField()),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Full'), (3, 'Cancelled'), (4, 'Expired')], default=1)),
                ('address', models.ForeignKey(default=events.models.get_default_address, on_delete=django.db.models.deletion.SET_DEFAULT, to='events.Address')),
                ('users', models.ManyToManyField(blank=True, related_name='enrolled_events', to=settings.AUTH_USER_MODEL)),
                ('waitlist', models.ManyToManyField(blank=True, related_name='waitlisted_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
